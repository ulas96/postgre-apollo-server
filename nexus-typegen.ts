/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Boost: { // root type
    createdAt?: string | null; // String
    firstCohort?: boolean | null; // Boolean
    ptpCohort?: boolean | null; // Boolean
    secondCohort?: boolean | null; // Boolean
    sjFriend?: boolean | null; // Boolean
    tasks75?: boolean | null; // Boolean
    tasks100?: boolean | null; // Boolean
    thirdCohort?: boolean | null; // Boolean
    totalBonus?: number | null; // Int
    userAddress: string; // String!
  }
  Main: { // root type
    bonus?: number | null; // Float
    createdAt?: string | null; // String
    firstEpochPoints?: number | null; // Float
    holdAUSD?: number | null; // Float
    holdXAVAX?: number | null; // Float
    pangolin?: number | null; // Float
    pharaoh?: number | null; // Float
    rebPool?: number | null; // Float
    referral?: string | null; // String
    referralUsed?: string | null; // String
    totalPoints: number; // Float!
    traderJoe?: number | null; // Float
    userAddress: string; // String!
  }
  Mutation: {};
  PtpDeposit: { // root type
    amount: number; // Float!
    userAddress: string; // String!
  }
  Query: {};
  Referral: { // root type
    createdAt: string; // String!
    dailyPoints?: number | null; // Float
    refereeAddress: string; // String!
    referrerAddress: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Boost: { // field return type
    createdAt: string | null; // String
    firstCohort: boolean | null; // Boolean
    ptpCohort: boolean | null; // Boolean
    secondCohort: boolean | null; // Boolean
    sjFriend: boolean | null; // Boolean
    tasks75: boolean | null; // Boolean
    tasks100: boolean | null; // Boolean
    thirdCohort: boolean | null; // Boolean
    totalBonus: number | null; // Int
    userAddress: string; // String!
  }
  Main: { // field return type
    bonus: number | null; // Float
    createdAt: string | null; // String
    firstEpochPoints: number | null; // Float
    holdAUSD: number | null; // Float
    holdXAVAX: number | null; // Float
    pangolin: number | null; // Float
    pharaoh: number | null; // Float
    rebPool: number | null; // Float
    referral: string | null; // String
    referralUsed: string | null; // String
    totalPoints: number; // Float!
    traderJoe: number | null; // Float
    userAddress: string; // String!
  }
  Mutation: { // field return type
    createBoost: NexusGenRootTypes['Boost']; // Boost!
    createMain: NexusGenRootTypes['Main'] | null; // Main
    createPtpDeposit: NexusGenRootTypes['PtpDeposit']; // PtpDeposit!
    createReferral: NexusGenRootTypes['Referral']; // Referral!
    updateMainPoints: NexusGenRootTypes['Main'] | null; // Main
    updateReferral: NexusGenRootTypes['Referral']; // Referral!
  }
  PtpDeposit: { // field return type
    amount: number; // Float!
    userAddress: string; // String!
  }
  Query: { // field return type
    boosts: NexusGenRootTypes['Boost'][]; // [Boost!]!
    getMain: NexusGenRootTypes['Main'] | null; // Main
    ptpDeposit: NexusGenRootTypes['PtpDeposit'] | null; // PtpDeposit
    ptpDeposits: NexusGenRootTypes['PtpDeposit'][]; // [PtpDeposit!]!
    referrals: NexusGenRootTypes['Referral'][]; // [Referral!]!
  }
  Referral: { // field return type
    createdAt: string; // String!
    dailyPoints: number | null; // Float
    refereeAddress: string; // String!
    referrerAddress: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Boost: { // field return type name
    createdAt: 'String'
    firstCohort: 'Boolean'
    ptpCohort: 'Boolean'
    secondCohort: 'Boolean'
    sjFriend: 'Boolean'
    tasks75: 'Boolean'
    tasks100: 'Boolean'
    thirdCohort: 'Boolean'
    totalBonus: 'Int'
    userAddress: 'String'
  }
  Main: { // field return type name
    bonus: 'Float'
    createdAt: 'String'
    firstEpochPoints: 'Float'
    holdAUSD: 'Float'
    holdXAVAX: 'Float'
    pangolin: 'Float'
    pharaoh: 'Float'
    rebPool: 'Float'
    referral: 'String'
    referralUsed: 'String'
    totalPoints: 'Float'
    traderJoe: 'Float'
    userAddress: 'String'
  }
  Mutation: { // field return type name
    createBoost: 'Boost'
    createMain: 'Main'
    createPtpDeposit: 'PtpDeposit'
    createReferral: 'Referral'
    updateMainPoints: 'Main'
    updateReferral: 'Referral'
  }
  PtpDeposit: { // field return type name
    amount: 'Float'
    userAddress: 'String'
  }
  Query: { // field return type name
    boosts: 'Boost'
    getMain: 'Main'
    ptpDeposit: 'PtpDeposit'
    ptpDeposits: 'PtpDeposit'
    referrals: 'Referral'
  }
  Referral: { // field return type name
    createdAt: 'String'
    dailyPoints: 'Float'
    refereeAddress: 'String'
    referrerAddress: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createBoost: { // args
      createdAt?: string | null; // String
      firstCohort?: boolean | null; // Boolean
      ptpCohort?: boolean | null; // Boolean
      secondCohort?: boolean | null; // Boolean
      sjFriend?: boolean | null; // Boolean
      tasks75?: boolean | null; // Boolean
      tasks100?: boolean | null; // Boolean
      thirdCohort?: boolean | null; // Boolean
      totalBonus?: number | null; // Int
      userAddress: string; // String!
    }
    createMain: { // args
      bonus?: number | null; // Float
      createdAt?: string | null; // String
      firstEpochPoints?: number | null; // Float
      holdAUSD?: number | null; // Float
      holdXAVAX?: number | null; // Float
      pangolin?: number | null; // Float
      pharaoh?: number | null; // Float
      rebPool?: number | null; // Float
      referral?: string | null; // String
      referralUsed?: string | null; // String
      totalPoints?: number | null; // Float
      traderJoe?: number | null; // Float
      userAddress: string; // String!
    }
    createPtpDeposit: { // args
      amount: number; // Float!
      userAddress: string; // String!
    }
    createReferral: { // args
      createdAt: string; // String!
      dailyPoints?: number | null; // Float
      refereeAddress: string; // String!
      referrerAddress: string; // String!
    }
    updateMainPoints: { // args
      points: number; // Float!
      userAddress: string; // String!
    }
    updateReferral: { // args
      createdAt: string; // String!
      dailyPoints?: number | null; // Float
      refereeAddress: string; // String!
    }
  }
  Query: {
    boosts: { // args
      walletAddress: string; // String!
    }
    getMain: { // args
      userAddress: string; // String!
    }
    ptpDeposit: { // args
      userAddress: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}